// Code generated by MockGen. DO NOT EDIT.
// Source: ./daemon/internal/index/service/interface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"
	dto "victord/daemon/internal/dto"
	models "victord/daemon/internal/index/models"

	gomock "github.com/golang/mock/gomock"
)

// MockIndexService is a mock of IndexService interface.
type MockIndexService struct {
	ctrl     *gomock.Controller
	recorder *MockIndexServiceMockRecorder
}

// MockIndexServiceMockRecorder is the mock recorder for MockIndexService.
type MockIndexServiceMockRecorder struct {
	mock *MockIndexService
}

// NewMockIndexService creates a new mock instance.
func NewMockIndexService(ctrl *gomock.Controller) *MockIndexService {
	mock := &MockIndexService{ctrl: ctrl}
	mock.recorder = &MockIndexServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIndexService) EXPECT() *MockIndexServiceMockRecorder {
	return m.recorder
}

// CreateIndex mocks base method.
func (m *MockIndexService) CreateIndex(ctx context.Context, idx *dto.CreateIndexRequest, name string) (*models.IndexResource, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateIndex", ctx, idx, name)
	ret0, _ := ret[0].(*models.IndexResource)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateIndex indicates an expected call of CreateIndex.
func (mr *MockIndexServiceMockRecorder) CreateIndex(ctx, idx, name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateIndex", reflect.TypeOf((*MockIndexService)(nil).CreateIndex), ctx, idx, name)
}
