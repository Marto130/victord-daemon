// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: victord.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateIndexRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IndexType     uint32                 `protobuf:"varint,1,opt,name=index_type,json=indexType,proto3" json:"index_type,omitempty"`
	Method        uint32                 `protobuf:"varint,2,opt,name=method,proto3" json:"method,omitempty"`
	Dims          uint32                 `protobuf:"varint,3,opt,name=dims,proto3" json:"dims,omitempty"`
	IndexName     string                 `protobuf:"bytes,4,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateIndexRequest) Reset() {
	*x = CreateIndexRequest{}
	mi := &file_victord_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIndexRequest) ProtoMessage() {}

func (x *CreateIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_victord_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIndexRequest.ProtoReflect.Descriptor instead.
func (*CreateIndexRequest) Descriptor() ([]byte, []int) {
	return file_victord_proto_rawDescGZIP(), []int{0}
}

func (x *CreateIndexRequest) GetIndexType() uint32 {
	if x != nil {
		return x.IndexType
	}
	return 0
}

func (x *CreateIndexRequest) GetMethod() uint32 {
	if x != nil {
		return x.Method
	}
	return 0
}

func (x *CreateIndexRequest) GetDims() uint32 {
	if x != nil {
		return x.Dims
	}
	return 0
}

func (x *CreateIndexRequest) GetIndexName() string {
	if x != nil {
		return x.IndexName
	}
	return ""
}

type CreateIndexResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Results       []*CreateIndexResult   `protobuf:"bytes,3,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateIndexResponse) Reset() {
	*x = CreateIndexResponse{}
	mi := &file_victord_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIndexResponse) ProtoMessage() {}

func (x *CreateIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_victord_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIndexResponse.ProtoReflect.Descriptor instead.
func (*CreateIndexResponse) Descriptor() ([]byte, []int) {
	return file_victord_proto_rawDescGZIP(), []int{1}
}

func (x *CreateIndexResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CreateIndexResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateIndexResponse) GetResults() []*CreateIndexResult {
	if x != nil {
		return x.Results
	}
	return nil
}

type CreateIndexResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IndexName     string                 `protobuf:"bytes,1,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Dims          uint32                 `protobuf:"varint,3,opt,name=dims,proto3" json:"dims,omitempty"`
	IndexType     string                 `protobuf:"bytes,4,opt,name=index_type,json=indexType,proto3" json:"index_type,omitempty"`
	Method        string                 `protobuf:"bytes,5,opt,name=method,proto3" json:"method,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateIndexResult) Reset() {
	*x = CreateIndexResult{}
	mi := &file_victord_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateIndexResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIndexResult) ProtoMessage() {}

func (x *CreateIndexResult) ProtoReflect() protoreflect.Message {
	mi := &file_victord_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIndexResult.ProtoReflect.Descriptor instead.
func (*CreateIndexResult) Descriptor() ([]byte, []int) {
	return file_victord_proto_rawDescGZIP(), []int{2}
}

func (x *CreateIndexResult) GetIndexName() string {
	if x != nil {
		return x.IndexName
	}
	return ""
}

func (x *CreateIndexResult) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateIndexResult) GetDims() uint32 {
	if x != nil {
		return x.Dims
	}
	return 0
}

func (x *CreateIndexResult) GetIndexType() string {
	if x != nil {
		return x.IndexType
	}
	return ""
}

func (x *CreateIndexResult) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

var File_victord_proto protoreflect.FileDescriptor

const file_victord_proto_rawDesc = "" +
	"\n" +
	"\rvictord.proto\x12\x02pb\"~\n" +
	"\x12CreateIndexRequest\x12\x1d\n" +
	"\n" +
	"index_type\x18\x01 \x01(\rR\tindexType\x12\x16\n" +
	"\x06method\x18\x02 \x01(\rR\x06method\x12\x12\n" +
	"\x04dims\x18\x03 \x01(\rR\x04dims\x12\x1d\n" +
	"\n" +
	"index_name\x18\x04 \x01(\tR\tindexName\"x\n" +
	"\x13CreateIndexResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12/\n" +
	"\aresults\x18\x03 \x03(\v2\x15.pb.CreateIndexResultR\aresults\"\x8d\x01\n" +
	"\x11CreateIndexResult\x12\x1d\n" +
	"\n" +
	"index_name\x18\x01 \x01(\tR\tindexName\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12\x12\n" +
	"\x04dims\x18\x03 \x01(\rR\x04dims\x12\x1d\n" +
	"\n" +
	"index_type\x18\x04 \x01(\tR\tindexType\x12\x16\n" +
	"\x06method\x18\x05 \x01(\tR\x06method2O\n" +
	"\rVictorService\x12>\n" +
	"\vCreateIndex\x12\x16.pb.CreateIndexRequest\x1a\x17.pb.CreateIndexResponseB3Z1git@github.com/victor-base/victord/daemon/grpc/pbb\x06proto3"

var (
	file_victord_proto_rawDescOnce sync.Once
	file_victord_proto_rawDescData []byte
)

func file_victord_proto_rawDescGZIP() []byte {
	file_victord_proto_rawDescOnce.Do(func() {
		file_victord_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_victord_proto_rawDesc), len(file_victord_proto_rawDesc)))
	})
	return file_victord_proto_rawDescData
}

var file_victord_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_victord_proto_goTypes = []any{
	(*CreateIndexRequest)(nil),  // 0: pb.CreateIndexRequest
	(*CreateIndexResponse)(nil), // 1: pb.CreateIndexResponse
	(*CreateIndexResult)(nil),   // 2: pb.CreateIndexResult
}
var file_victord_proto_depIdxs = []int32{
	2, // 0: pb.CreateIndexResponse.results:type_name -> pb.CreateIndexResult
	0, // 1: pb.VictorService.CreateIndex:input_type -> pb.CreateIndexRequest
	1, // 2: pb.VictorService.CreateIndex:output_type -> pb.CreateIndexResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_victord_proto_init() }
func file_victord_proto_init() {
	if File_victord_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_victord_proto_rawDesc), len(file_victord_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_victord_proto_goTypes,
		DependencyIndexes: file_victord_proto_depIdxs,
		MessageInfos:      file_victord_proto_msgTypes,
	}.Build()
	File_victord_proto = out.File
	file_victord_proto_goTypes = nil
	file_victord_proto_depIdxs = nil
}
